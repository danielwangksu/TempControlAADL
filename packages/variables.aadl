package variables
  public
  with Data_Model;

--Valid/Invalid enumerated type
data valid_flag
  properties
  Data_Model::Data_Representation => Enum;
  Data_Model::Enumerators => ("Invalid","Valid");
end valid_flag;

--range of Lower Desired Temperature  
data lower_desired_range
  properties
  Data_Model::Integer_Range => 67 .. 72;
  Data_Model::Measurement_Unit => "Fahrenheit";
end lower_desired_range;  

--record for Lower Desired Temperature, "t" is temp range, "v" is valid flag  
data lower_desired_temperature 
  properties
  Data_Model::Data_Representation => Struct;
  Data_Model::Element_Names => ("t","v");
  Data_Model::Base_Type => (classifier (variables::lower_desired_range), classifier (variables::valid_flag));
end lower_desired_temperature; 

--range of Upper Desired Temperature  
data upper_desired_range
  properties
  Data_Model::Integer_Range => 70 .. 75;
  Data_Model::Measurement_Unit => "Fahrenheit";
end upper_desired_range;  

--record for Upper Desired Temperature, "t" is temp range, "v" is valid flag  
data upper_desired_temperature 
  properties
  Data_Model::Data_Representation => Struct;
  Data_Model::Element_Names => ("t","v");
  Data_Model::Base_Type => (classifier (variables::upper_desired_range), classifier (variables::valid_flag));
end upper_desired_temperature; 

--range of Lower alarm Temperature  
data lower_alarm_range
  properties
  Data_Model::Integer_Range => 64 .. 70;
  Data_Model::Measurement_Unit => "Fahrenheit";
end lower_alarm_range;  

--record for Lower alarm Temperature, "t" is temp range, "v" is valid flag  
data lower_alarm_temperature 
  properties
  Data_Model::Data_Representation => Struct;
  Data_Model::Element_Names => ("t","v");
  Data_Model::Base_Type => (classifier (variables::lower_alarm_range), classifier (variables::valid_flag));
end lower_alarm_temperature; 

--range of Upper alarm Temperature  
data upper_alarm_range
  properties
  Data_Model::Integer_Range => 75 .. 80;
  Data_Model::Measurement_Unit => "Fahrenheit";
end upper_alarm_range;  

--record for Upper alarm Temperature, "t" is temp range, "v" is valid flag  
data upper_alarm_temperature 
  properties
  Data_Model::Data_Representation => Struct;
  Data_Model::Element_Names => ("t","v");
  Data_Model::Base_Type => (classifier (variables::upper_alarm_range), classifier (variables::valid_flag));
end upper_alarm_temperature; 

--Table A-6

--Regulator and Monitor Status
data status
  properties
  Data_Model::Data_Representation => Enum;
  Data_Model::Enumerators => ("Init","On","Failed");
end status;
 
--range of Display Temperature  
data display_temperature_range
  properties
  Data_Model::Integer_Range => 50 .. 100;
  Data_Model::Measurement_Unit => "Fahrenheit";
end display_temperature_range;  

--alarm value
data on_off
  properties
  Data_Model::Data_Representation => Enum;
  Data_Model::Enumerators => ("Off","On");
end on_off;

--Table A-7. The Regulate Temperature Internal Variables 

--Lower Desired Temp 
data lower_desired_temp
  properties
  Data_Model::Integer_Range => 70 .. 75;
  Data_Model::Measurement_Unit => "Fahrenheit";
end lower_desired_temp;  
  
--Upper Desired Temp 
data upper_desired_temp
  properties
  Data_Model::Integer_Range => 70 .. 75;
  Data_Model::Measurement_Unit => "Fahrenheit";
end upper_desired_temp;  
  
--Desired Range "l" is lower bound, "u" is upper bound
data desired_range
  properties
  Data_Model::Data_Representation => Struct;
  Data_Model::Element_Names => ("l","u");
  Data_Model::Base_Type => (classifier (variables::lower_desired_temp), classifier (variables::upper_desired_temp));
end desired_range;  

--Regulator Mode
data regulator_mode
  properties
  Data_Model::Data_Representation => Enum;
  Data_Model::Enumerators => ("Init","NORMAL","FAILED");
end regulator_mode;

--Lower alarm Temp 
data lower_alarm_temp
  properties
  Data_Model::Integer_Range => 96 .. 101;
  Data_Model::Measurement_Unit => "Fahrenheit";
end lower_alarm_temp;  
  
--Upper alarm Temp 
data upper_alarm_temp
  properties
  Data_Model::Integer_Range => 97 .. 102;
  Data_Model::Measurement_Unit => "Fahrenheit";
end upper_alarm_temp;  
  
--alarm Range "l" is lower bound, "u" is upper bound
data alarm_range
  properties
  Data_Model::Data_Representation => Struct;
  Data_Model::Element_Names => ("l","u");
  Data_Model::Base_Type => (classifier (variables::lower_alarm_temp), classifier (variables::upper_alarm_temp));
end alarm_range;  

--monitor Mode
data monitor_mode
  properties
  Data_Model::Data_Representation => Enum;
  Data_Model::Enumerators => ("INIT","NORMAL","FAILED");
end monitor_mode;
  
end variables;  